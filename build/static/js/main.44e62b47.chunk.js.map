{"version":3,"sources":["redux/reducers/Company.js","redux/companyDummy.js","redux/actionTypes.js","redux/reducers/Office.js","redux/officeDummy.js","redux/reducers/Process.js","redux/actions/Office.js","redux/actions/Process.js","redux/sagas/Company.js","redux/sagas/Office.js","redux/sagas/index.js","store/index.js","app/routes/overview/createCompany.js","redux/actions/Company.js","app/routes/overview/createOffice.js","app/routes/overview/listCompany.js","app/routes/overview/index.js","app/routes/office/index.js","app/index.js","container/layout.js","MainApp.js","App.js","redux/reducers/index.js","index.js"],"names":["INIT_STATE","id","listCompany","selectedCompany","isUpdate","state","action","type","companyList","map","comp","push","payload","myList","find","x","removeComp","item","indexOf","newLIstComp","splice","afterDeleteList","listOfficeById","allOffice","listByCompany","filter","key","company_id","newList","offc","id_office","message","showMessage","status","NotificationManager","error","info","fetchOfficeById","data","_loadListCompany","_deleteComp","loadListCompany","onDeleteComp","rootSaga","put","takeEvery","all","fork","_deleteOffice","onDeleteOffice","id_company","companySagas","officeSagas","history","createBrowserHistory","routeMiddleware","routerMiddleware","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","CreateCompany","name","address","revenue","phoneCode","phone","this","props","validate","onAddCompany","setState","style","margin","className","placeholder","value","onChange","e","target","min","marginTop","onClick","sendRequest","Component","connect","company","CreateOffice","location","start_date","moment","format","onAddOffice","console","log","loc","slice","parseInt","length","row","office","ListCompany","delModal","onDeleteCompany","marginBottom","index","display","alignItems","justifyContent","to","textAlign","Modal","aria-labelledby","centered","show","onHide","Header","closeButton","Title","Body","Footer","Button","handleDelete","OverviewPage","borderLeft","OfficePage","onSelectCompany","match","params","padding","width","App","path","component","CompanyPage","exact","Layout","navCollapsed","Navbar","bg","expand","variant","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","MainApp","store","initState","createStore","combineReducers","router","connectRouter","CompanyReducer","OfficeReducers","pcs","ProcessReducer","applyMiddleware","run","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44e62b47.chunk.js","sourcesContent":["import {CompanyList} from '../companyDummy';\nimport { ON_ADD_COMPANY, ON_SELECT_COMPANY, ON_DELETE_COMPANY, ON_DELETE_COMPANY_SUCCESS } from '../actionTypes';\n\nconst INIT_STATE = {\n    id:1,\n    listCompany:CompanyList,\n    selectedCompany:{},\n    isUpdate:false,\n}\n\n\nexport default (state=INIT_STATE, action)=>{\n    switch(action.type){\n        case ON_ADD_COMPANY:\n            const companyList = state.listCompany.map((comp)=>{\n                return comp\n            })\n\n            companyList.push(action.payload)\n            return {\n                ...state,\n                listCompany:companyList,\n                id:action.payload.id\n            }\n        case ON_SELECT_COMPANY:\n            let myList = state.listCompany.find(x=>x.id==action.payload)\n            if(!myList){\n                myList={}\n            }\n            return {\n                ...state,\n                selectedCompany:myList\n            }\n        \n        case ON_DELETE_COMPANY:\n            var removeComp = state.listCompany.map(item=>(item.id)).indexOf(action.payload)\n            var newLIstComp = state.listCompany\n\n            if(removeComp>=0){\n                newLIstComp.splice(removeComp, 1);\n            }\n            return {\n                ...state,\n                listCompany:newLIstComp,\n                isUpdate:!state.isUpdate\n            }\n\n        case ON_DELETE_COMPANY_SUCCESS:\n            const afterDeleteList = state.listCompany;\n            afterDeleteList.push({});\n            return {\n                ...state,\n                listCompany:afterDeleteList\n            }\n        default:\n            return state;\n    }\n}","export const CompanyList = [\n    {\n        \"id\":1,\n        \"name\":\"Google\",\n        \"revenue\":99999,\n        \"address\":\"surabaya\",\n        \"phone\":\"(62)89849898191\"\n    }\n]","//Company\nexport const ON_ADD_COMPANY = 'on_add_company'\nexport const ON_SELECT_COMPANY = 'on_select_company'\nexport const ON_DELETE_COMPANY = 'on_delete_company'\nexport const ON_DELETE_COMPANY_SUCCESS = 'on_delete_company_success'\n\n//Office\nexport const FETCH_OFFICE_COMPANY = 'fecth_office_company'\nexport const ON_ADD_OFFICE = 'on_add_office'\nexport const ON_DELETE_OFFICE = 'on_delete_office'\n\n//Process\nexport const SHOW_MESSAGE = 'show_message'\nexport const HIDE_MESSAGE = 'hide_message'","import { FETCH_OFFICE_COMPANY, ON_ADD_OFFICE, ON_DELETE_OFFICE } from \"../actionTypes\"\nimport {OfficeList} from '../officeDummy';\n\nconst INIT_STATE = {\n    id:3,\n    listOfficeById:[],\n    allOffice:OfficeList,\n    isUpdate:false,\n}\n\nexport default(state=INIT_STATE, action)=>{\n    switch(action.type){\n        case FETCH_OFFICE_COMPANY:\n            var listByCompany =  state.allOffice.filter((item, key)=>item.company_id==action.payload)\n\n            return {\n                ...state,\n                listOfficeById:[...listByCompany]\n            }\n        case ON_ADD_OFFICE:\n            let  newList  = state.allOffice.map((offc)=>{\n                return offc\n            });\n\n            newList.push(action.payload)\n            return{\n                ...state,\n                allOffice:newList\n            }\n        \n        case ON_DELETE_OFFICE:\n            var removeComp = state.allOffice.map(item=>(item.id)).indexOf(action.payload.id_office)\n\n            var newLIstComp = state.allOffice\n\n            if(removeComp>=0){\n                newLIstComp.splice(removeComp, 1);\n            }\n\n            return {\n                ...state,\n                allOffice:newLIstComp,\n                isUpdate:!state.isUpdate\n            }\n\n        default:\n            return state;\n    }\n}","export const OfficeList = [\n    {\n        \"id\":1,\n        \"company_id\":1,\n        \"name\":\"surabaya office\",\n        \"location\":[1233123, 1231231],\n        \"start_date\":\"12/02/2020\"\n    },\n    {\n        \"id\":2,\n        \"company_id\":1,\n        \"name\":\"jakarta office\",\n        \"location\":[1233123, 1231231],\n        \"start_date\":\"03/11/2020\"\n    },\n    {\n        \"id\":3,\n        \"company_id\":1,\n        \"name\":\"jakarta office\",\n        \"location\":[1233123, 1231231],\n        \"start_date\":\"25/12/2020\"\n    }\n]","import { SHOW_MESSAGE, HIDE_MESSAGE } from \"../actionTypes\"\nimport { NotificationManager } from 'react-notifications';\n\nconst INIT_STATE = {\n    message:'',\n    showMessage:false,\n}\n\nexport default(state=INIT_STATE, action)=>{\n    switch(action.type){\n        case SHOW_MESSAGE:\n            if(action.payload.status==\"error\"){\n                NotificationManager.error(action.payload.message, \"Error\", 3000)\n            }else{\n                NotificationManager.info(action.payload.message, \"Info\", 3000)\n            }\n        return {\n            ...state,\n            message:action.payload.message,\n            showMessage:true\n        }\n\n        case HIDE_MESSAGE:\n            return {\n                ...state, \n                message:'',\n                showMessage:false\n            }\n        default:\n            return state;\n    }\n}","import { FETCH_OFFICE_COMPANY, ON_ADD_OFFICE, ON_DELETE_OFFICE } from \"../actionTypes\";\n\nexport const fetchOfficeById = (data) =>({type:FETCH_OFFICE_COMPANY, payload:data})\nexport const onAddOffice = (data) =>({type:ON_ADD_OFFICE, payload:data})\nexport const onDeleteOffice = (id_office, id_company) =>({type:ON_DELETE_OFFICE, payload:{id_office, id_company}})","import { SHOW_MESSAGE } from \"../actionTypes\";\n\nexport const showMessage = (message, status=\"error\") =>({type:SHOW_MESSAGE, payload:{message, status}})\nexport const hideMessage = () =>({type:SHOW_MESSAGE})","import { fork, takeEvery, put, all } from \"redux-saga/effects\"\nimport { ON_DELETE_COMPANY } from \"../actionTypes\"\nimport { onDeleteCompanySuccess } from \"../actions\"\n\nfunction* _loadListCompany(){\n    yield put({type:'fetch_company_success', payload:{}})\n}\n\nfunction* _deleteComp(){\n    // yield put(onDeleteCompanySuccess())\n}\n\nexport function* loadListCompany(){\n    yield takeEvery('fetch_all_company', _loadListCompany)\n}\n\nexport function* onDeleteComp(){\n    yield takeEvery(ON_DELETE_COMPANY, _deleteComp)\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(loadListCompany),\n        fork(onDeleteComp)\n    ])\n}","import { fork, takeEvery, put, all } from \"redux-saga/effects\"\nimport {ON_DELETE_OFFICE} from \"../actionTypes\"\nimport { fetchOfficeById } from \"../actions\"\n\nfunction* _deleteOffice({payload}){\n    yield put(fetchOfficeById(payload.id_company))\n}\n\nexport function* onDeleteOffice(){\n    yield takeEvery(ON_DELETE_OFFICE, _deleteOffice)\n}\n\nexport default function* rootSaga(){\n    yield all([\n        fork(onDeleteOffice),\n    ])\n}","import {all} from 'redux-saga/effects';\nimport companySagas from './Company';\nimport officeSagas from './Office';\n\nexport default function* rootSaga(){\n    yield all([\n        companySagas(),\n        officeSagas()\n    ])\n}","import {createStore, applyMiddleware, compose} from 'redux'\nimport reducer from '../redux/reducers';\nimport {createBrowserHistory} from 'history';\nimport {routerMiddleware} from 'connected-react-router';\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../redux/sagas';\n\nconst history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, routeMiddleware]\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose\n\nexport default function configureStore(initState){\n    const store = createStore(reducer(history), initState, composeEnhancers(applyMiddleware(...middlewares)))\n    sagaMiddleware.run(rootSaga);\n    if(module.hot){\n        module.hot.accept('../redux/reducers/index', ()=>{\n            const nextReducer = require('../redux/reducers/index')\n            store.replaceReducer(nextReducer)\n        })\n    }\n    return store;\n}\n\nexport {history}","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { onAddCompany, showMessage } from '../../../redux/actions';\n\nclass CreateCompany extends Component {\n    constructor(){\n        super();\n        this.state = {\n            id:1,\n            name:\"\",\n            address:\"\",\n            revenue:\"\",\n            phoneCode:\"\",\n            phone:\"\",\n\n        }\n    }\n\n    sendRequest(){\n        const payload = {\n            id:this.props.id+1,\n            name:this.state.name,\n            address:this.state.address,\n            revenue:this.state.revenue,\n            phone:`(${this.state.phoneCode}) ${this.state.phone}`\n        }\n\n        if (this.validate()==true) {\n            this.props.onAddCompany(payload)\n            this.props.showMessage(\"Success Add Company\", \"Info\");\n            this.setState({id:this.state.id+1, name:\"\",address:\"\",revenue:\"\",phoneCode:\"\",phone:\"\",})\n        }else{\n            this.props.showMessage(\"Complete the form\")\n        }\n\n    }\n\n    validate(){\n        const {id, name, address, revenue, phone, phoneCode} = this.state;\n        if (id==\"\" || name==\"\" || address==\"\" || revenue==\"\" || phone==\"\" || phoneCode==\"\") {\n            return false\n        }else{\n            return true\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Create Company</h3>\n                <div style={{margin:\"0% 3%\"}}>\n                    <div className=\"form-group\">\n                        <label className=\"control-label\">Name :</label>\n                        <input placeholder=\"Name\" className=\"form-control\" type=\"text\" value={this.state.name} onChange={(e)=>this.setState({name:e.target.value})} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"control-label\">Address :</label>\n                        <input placeholder=\"Address\" className=\"form-control\" type=\"text\" value={this.state.address} onChange={(e)=>this.setState({address:e.target.value})} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"control-label\">Revenue :</label>\n                        <input placeholder=\"Revenue\" className=\"form-control\" type=\"number\" min=\"0\" value={this.state.revenue} onChange={(e)=>this.setState({revenue:e.target.value})} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"control-label\">Phone No :</label>\n                        <div className=\"row\">\n                            <div className=\"col-3\">\n                                <input placeholder=\"code\" className=\"form-control\" type=\"number\" value={this.state.phoneCode} onChange={(e)=>this.setState({phoneCode:e.target.value})} />\n                            </div>\n                            <div className=\"col-9\">\n                                <input placeholder=\"number\" className=\"form-control\" type=\"number\" value={this.state.phone} onChange={(e)=>this.setState({phone:e.target.value})} />\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{marginTop:\"30px\"}} className=\"form-group\">\n                        <button className=\"btn btn-secondary btn-block\" onClick={()=>this.sendRequest()}>Create</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mtp = ({company}) => {\n    const {listCompany, id} = company\n    return {listCompany, id}\n}\n\nexport default connect(mtp, {onAddCompany, showMessage}) (CreateCompany);","import { ON_ADD_COMPANY, ON_SELECT_COMPANY, ON_DELETE_COMPANY, ON_DELETE_COMPANY_SUCCESS } from \"../actionTypes\";\n\nexport const onAddCompany = (data) => ({type:ON_ADD_COMPANY, payload:data})\nexport const onSelectCompany = (data) =>({type:ON_SELECT_COMPANY, payload:data})\nexport const onDeleteCompany = (data) =>({type:ON_DELETE_COMPANY, payload:data})\nexport const onDeleteCompanySuccess = () =>({type:ON_DELETE_COMPANY_SUCCESS, payload:{}})","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment'\nimport { onAddOffice, showMessage } from '../../../redux/actions';\n\nclass CreateOffice extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id:3,\n            company_id:0,\n            name:\"\",\n            location:[\"\",\"\"],\n            start_date:\"\"\n        }\n    }\n\n    sendRequest(){\n        const payload = {\n            id:this.props.id+1,\n            company_id:this.state.company_id,\n            name:this.state.name,\n            location:this.state.location,\n            start_date:moment(this.state.start_date).format('DD/MM/YYYY')\n        }\n\n        if (this.validate()==true) {\n            if(this.state.company_id<=0){\n               this.props.showMessage(\"Choose One Of Company\") \n            }else{\n                this.props.onAddOffice(payload)\n                console.log(payload)\n                this.props.showMessage(\"Success Add Office\", \"Info\") \n                this.setState({id:this.props.id+1, company_id:0, name:\"\", location:[\"\",\"\"], start_date:\"\"})\n            }\n        }else{\n            this.props.showMessage(\"Complete The Form\")\n        }\n    \n    }\n\n    validate(){\n        const {company_id, name, location, start_date} = this.state;\n        if ( name==\"\" || location[0]==\"\" || location[1]==\"\" || start_date==\"\") {\n            return false\n        }else{\n            return true\n        }\n    }\n\n    render() {\n        const {listCompany} = this.props;\n        let loc = this.state.location.slice()\n        return (\n            <div>\n                <h3>Create Office</h3>\n                <div style={{margin:\"0% 3%\"}}>\n                    <div className=\"form-group\">\n                        <label className=\"control-label\">Name :</label>\n                        <input placeholder=\"Name\" className=\"form-control\" type=\"text\" value={this.state.name} onChange={(e)=>this.setState({name:e.target.value})} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"control-label\">Location :</label>\n                        <div className=\"row\">\n                            <div className=\"col-6\">\n                                <input placeholder=\"Latitude\" className=\"form-control\" type=\"number\" value={this.state.location[0]} onChange={(e)=>{\n                                    loc[0]=parseInt(e.target.value)\n                                    this.setState({location:loc})\n                                }}/>\n                            </div>\n                            <div className=\"col-6\">\n                                <input placeholder=\"Longitude\" className=\"form-control\" type=\"number\" value={this.state.location[1]} onChange={(e)=>{\n                                    loc[1]=parseInt(e.target.value)\n                                    this.setState({location:loc})\n                                }} />\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <label className=\"control-label\">Office Start Date :</label>\n                        <input className=\"form-control\" value={this.state.start_date} onChange={(e)=>this.setState({start_date:e.target.value})} type=\"date\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"control-label\">Company :</label>\n                        <select value={this.state.company_id} onChange={(e)=>this.setState({company_id:parseInt(e.target.value)})} className=\"custom-select\">\n                            <option value=\"\">Choose Company</option>\n                            {\n                                listCompany.length>0\n                                &&\n                                listCompany.map((row,id)=>(\n                                    <option key={id} value={row.id}>{row.name}</option>\n                                ))\n                            }\n                        </select>\n                    </div>\n                    <div style={{marginTop:\"30px\"}} className=\"form-group\">\n                        <button className=\"btn btn-secondary btn-block\" onClick={()=>this.sendRequest()}>Create</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mtp = ({company, office}) => {\n    const {listCompany, isUpdate} = company\n    const {id} = office\n    return {listCompany, isUpdate, id}\n}\n\nexport default connect(mtp, {onAddOffice, showMessage}) (CreateOffice);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {FaTimes} from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { onDeleteCompany, showMessage } from '../../../redux/actions';\nimport { Modal, Button } from 'react-bootstrap';\n\nclass ListCompany extends Component {\n    constructor(){\n        super();\n        this.state={\n            delModal:false,\n            id:null\n        }\n    }\n\n    handleDelete(id){\n        this.props.onDeleteCompany(id);\n        this.setState({id:null, delModal:false})\n        this.props.showMessage(\"Success Delete Company\", \"Info\")\n    }\n\n    render() {\n        const {listCompany, onDeleteCompany} = this.props;\n        return (\n            <div style={{marginBottom:\"50px\"}}>\n                <hr />\n                <h2>Companies</h2>\n                <div className=\"row\">\n                {\n                    listCompany.length>0\n                    ?\n                    listCompany.map((row, index)=>(\n                        <div className=\"col-6\" key={index} style={{marginBottom:\"20px\"}}>\n                            <div className=\"card\">\n                                <div className=\"card-header\" style={{display:\"flex\", alignItems:\"center\", justifyContent:\"space-between\"}}>\n                                    <Link to={`/office/${row.id}`}>{row.name}</Link>\n                                    <button className=\"btn btn-icon\" onClick={()=>this.setState({delModal:true, id:row.id})}>\n                                        <FaTimes />\n                                    </button>\n                                </div>\n                                <div className=\"card-body\">\n                                    <b>Address :</b>\n                                    <p>{row.address}</p>\n                                    <b>Revenue :</b>\n                                    <p>{row.revenue}</p>\n                                    <b>Phone No :</b>\n                                    <p>{row.phone}</p>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                    :\n                    (\n                        <div className=\"col-sm-12\">\n                            <h5 style={{textAlign:\"center\"}}>There is no Company created yet</h5>\n                        </div>\n                    )\n                }\n                <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered show={this.state.delModal} onHide={()=>this.setState({delModal:false, id:null})}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Alert</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Are you sure to delete?\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={()=>this.handleDelete(this.state.id)}>Delete</Button>\n                    </Modal.Footer>\n                </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mtp = ({company}) => {\n    const {listCompany, isUpdate} = company\n    return {listCompany, isUpdate}\n}\n\nexport default connect(mtp, {onDeleteCompany, showMessage}) (ListCompany);","import React, { Component } from 'react';\nimport CreateCompany from './createCompany';\nimport CreateOffice from './createOffice';\nimport ListCompany from './listCompany';\n\nclass OverviewPage extends Component {\n    render() {\n        return (\n            <div className=\"container\" style={{marginTop:\"40px\"}}>\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <CreateCompany />\n                    </div>\n                    <div style={{borderLeft:\"1px solid #0000001a\"}} className=\"col-sm-6\">\n                        <CreateOffice />\n                    </div>\n                    <div className=\"col-sm-12\">\n                        <ListCompany />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default OverviewPage;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { onSelectCompany, fetchOfficeById, onDeleteOffice, showMessage } from '../../../redux/actions';\nimport {FaTimes} from 'react-icons/fa';\nimport { Modal, Button } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nclass OfficePage extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            delModal:false,\n            id:null,\n            company_id:null,\n        }\n        this.props.onSelectCompany(this.props.match.params.id)\n        this.props.fetchOfficeById(this.props.match.params.id)\n    }\n\n    handleDelete(){\n        this.props.onDeleteOffice(this.state.id, this.state.company_id);\n        this.setState({id:null, company_id:null, delModal:false})\n        this.props.showMessage(\"Success Delete Office\", \"Info\")\n    }\n\n    render() {\n        const {selectedCompany, listOfficeById, match} = this.props;\n        return (\n            <div className=\"container\" style={{marginTop:\"40px\", display:\"flex\", justifyContent:\"center\"}} >\n                <div className=\"card\" style={{padding:\"15px 30px\", width:\"70%\"}}>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h3>{selectedCompany.name}</h3>\n                            <hr/>\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <b>Address</b>\n                                    <p>{selectedCompany.address}</p>\n                                </div>\n                                <div className=\"col-12\">\n                                    <b>Revenue</b>\n                                    <p>{selectedCompany.revenue}</p>\n                                </div>\n                                <div className=\"col-12\" style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n                                    <div>\n                                        <b>Phone No</b>\n                                        <p>{selectedCompany.phone}</p>\n                                    </div>\n                                    <Link to=\"/overview\">\n                                        <button className=\"btn btn-primary\">\n                                            Back to Overview\n                                        </button>\n                                    </Link>\n                                </div>\n                            </div>\n                            <hr />\n                            <h3>Offices</h3>\n                            <div className=\"row\" style={{marginTop:\"30px\"}}>\n                                {\n                                    listOfficeById.length>0\n                                    ?\n                                    listOfficeById.map((row,id)=>(\n                                        <div className=\"col-6\" key={id}>\n                                            <div className=\"card\" style={{marginBottom:\"20px\"}}>\n                                                <div className=\"card-header\" style={{display:\"flex\", alignItems:\"center\", justifyContent:\"space-between\"}}>\n                                                    {row.name}\n                                                    <button className=\"btn btn-icon\" onClick={()=>this.setState({delModal:true, id:row.id, company_id:match.params.id})}>\n                                                        <FaTimes />\n                                                    </button>\n                                                </div>\n                                                <div className=\"card-body\">\n                                                    <b>Location :</b>\n                                                    <p>{row.location}</p>\n                                                    <b>Office Start Date :</b>\n                                                    <p>{row.start_date}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))\n                                    :\n                                    (\n                                        <div className=\"col-12\">\n                                            <h3 style={{textAlign:\"center\"}}>There is no office created yet</h3>\n                                        </div>\n                                    )\n                                }\n                                <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered show={this.state.delModal} onHide={()=>this.setState({delModal:false, id:null})}>\n                                    <Modal.Header closeButton>\n                                        <Modal.Title>Alert</Modal.Title>\n                                    </Modal.Header>\n                                    <Modal.Body>\n                                        Are you sure to delete?\n                                    </Modal.Body>\n                                    <Modal.Footer>\n                                        <Button onClick={()=>this.handleDelete()}>Delete</Button>\n                                    </Modal.Footer>\n                                </Modal>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mtp = ({company, office}) => {\n    const {selectedCompany} = company;\n    const {listOfficeById, isUpdate} = office;\n    return {selectedCompany, listOfficeById, isUpdate}\n}\n\nexport default connect(mtp,{onSelectCompany, fetchOfficeById, onDeleteOffice, showMessage}) (OfficePage);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport CompanyPage from './routes/overview';\nimport OfficePage from './routes/office';\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Switch>\n                    <Route path=\"/overview\" component={CompanyPage} />\n                    <Route exact path=\"/office/:id\" component={OfficePage} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport App from '../app/index';\nimport {Link} from 'react-router-dom';\n\nclass Layout extends Component {\n    constructor(){\n        super();\n        this.state = {\n            navCollapsed:true,\n        }\n    }\n\n    btnNav(){\n        this.setState({navCollapsed:!this.state.navCollapsed})\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\n                    <Navbar.Brand  as={Link} to=\"/\">Test</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link as={Link} to=\"/overview\">Overview</Nav.Link>\n                            {/* <Nav.Link as={Link} to=\"/offices\">Office</Nav.Link> */}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n                <App />\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport Layout from './container/layout';\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer} from 'react-notifications'\n\nclass MainApp extends Component {\n\n    render() {\n        return (\n            <div>\n                <Layout />\n                <NotificationContainer />\n            </div>\n        );\n    }\n}\n\nexport default MainApp;","import React from 'react';\nimport {Provider} from 'react-redux';\nimport configureStore, {history} from './store';\nimport {ConnectedRouter} from 'connected-react-router';\nimport './App.css';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport MainApp from './MainApp';\n\nconst store=configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <Switch>\n          <Route path=\"/\" component={MainApp} />\n        </Switch>\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import {combineReducers} from \"redux\"\nimport {connectRouter} from \"connected-react-router\"\nimport CompanyReducer from './Company';\nimport OfficeReducers from './Office';\nimport ProcessReducer from './Process';\n\nexport default (history) => combineReducers({\n    router:connectRouter(history),\n    company:CompanyReducer,\n    office:OfficeReducers,\n    pcs:ProcessReducer,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <div>\n        <App />\n    </div> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}